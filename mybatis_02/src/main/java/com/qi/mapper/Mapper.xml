<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.qi.mapper.Mapper">

    <!--sql片段-->
    <sql id="sql01">
        <if test="userExtend != null">
            <if test="userExtend.sex != null">
                and sex=#{userExtend.sex}
            </if>
            <if test="userExtend.username != null">
                and username like "%${userExtend.username}%"
            </if>
        </if>
    </sql>

    <select id="findlikeUser" parameterType="java.lang.String" resultType="com.qi.po.User">
        select * from user where username like #{value};
    </select>

    <select id="findUser" parameterType="java.lang.String" resultType="com.qi.po.User">
        select * from user where username like "%${value}%";
    </select>

    <!--获取主键信息,使得插入数据的时候让id自动递增(常用语没有设置主键的表)-->
    <insert id="add" parameterType="com.qi.po.User" useGeneratedKeys="true" keyProperty="">
          insert into user (username,sex,address) values (#{username},#{sex},#{address});
    </insert>


    <resultMap id="myresultMap" type="com.qi.po.User">
        <id column="user_id" property="id"/>
        <result column="username" property="username"/>
        <result column="user_sex" property="sex"/>
        <result column="user_adress" property="address"/>
    </resultMap>

    <!--测试resultMap-->
    <select id="findUserById" parameterType="int" resultMap="myresultMap">
        select username as user_name, sex as user_sex, address as user_address from user where id=#{value};
    </select>

    <resultMap id="myResultMap" type="com.qi.po.User">
        <id column="my_id" property="id"/>
        <result column="user_name" property="username"/>
        <result column="use_sex" property="sex"/>
        <result column="user_address" property="address"/>
    </resultMap>

    <select id="queryUserById" parameterType="int" resultMap="myResultMap">
              select username as user_name,sex as user_sex,address as user_address from user where id = #{value};
    </select>


    <!--查出来的结果以键值对的形式放在map集合当中-->
    <select id="getList" parameterType="com.qi.po.UserExtend" resultType="java.util.HashMap">
        select username,sex,address from user;
    </select>


    <!--非动态sql的形式-->
    <select id="queryByMoreCon1" parameterType="com.qi.bz.UserGroom" resultType="com.qi.po.UserExtend">
        select *
        from user
        where
        sex=#{userExtend.sex}
        and username like "%${userExtend.username}%";
    </select>


    <!--动态sql的形式-->
    <select id="queryByMoreCon" parameterType="com.qi.bz.UserGroom" resultType="com.qi.po.UserExtend">
            select *
            from user
            <where>
                <if test="userExtend!=null">
                    <if test="userExtend.sex != null">
                        and sex =#{userExtend.sex}
                    </if>
                    <if test="userExtend.username != null">
                        and username like "%${userExtend.username}%"
                    </if>
                </if>
            </where>
    </select>

    <select id="queryNumber" parameterType="com.qi.bz.UserGroom" resultType="int">
        select count(*) from user
        <where>
          <include refid="sql01"/>
        </where>
    </select>


    <!--单参数List下的查询-->
    <!--实际的sql 是 select*from user where 1=1 and (id=1 or id=2 or id=3) 所以下面open是and( -->
    <!--注意下面 id=#{every} 后面一定不能加; 加上了他会默认在查每一个id后加一个 ; -->
    <select id="queryByMoreId" parameterType="com.qi.bz.UserGroom" resultType="com.qi.po.User">
        select * from user
        <where>
            <foreach collection="idList" item="everyid" open="and (" close=")" separator="or">
                  id= #{everyid}
             </foreach>
        </where>
    </select>

</mapper>